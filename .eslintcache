[{"/Users/younissaleh/Desktop/githubb/src/reportWebVitals.js":"1","/Users/younissaleh/Desktop/githubb/src/App.js":"2","/Users/younissaleh/Desktop/githubb/src/index.js":"3"},{"size":362,"mtime":1606346038952,"results":"4","hashOfConfig":"5"},{"size":2964,"mtime":1606350598254,"results":"6","hashOfConfig":"5"},{"size":543,"mtime":1606348828859,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11k176h",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/younissaleh/Desktop/githubb/src/reportWebVitals.js",[],"/Users/younissaleh/Desktop/githubb/src/App.js",["15","16","17","18"],"import React, { useState, useEffect } from \"react\";\nimport { Card, Icon, Image, Form } from \"semantic-ui-react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [followers, setFollowers] = useState(\"\");\n  const [following, setFollowing] = useState(\"\");\n  const [repos, setRepos] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // api\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/example\")\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data); to see our data\n        setData(data);\n      });\n  }, []);\n\n  // pass in the data we git from our api\n  const setData = ({\n    name,\n    login,\n    followers,\n    following,\n    public_repos,\n    avatar_url,\n  }) => {\n    setName(name);\n    setUserName(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n  };\n\n  // search\n  const handelSearch = (e) => {\n    e.preventDefault();\n    setUserInput(e.target.value);\n  };\n\n  const handelSubmit = () => {\n    // to submit ou form\n\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then((res) => res.json())\n      .then((data) => {\n        //  handel invalid user\n        if (data.message) {\n          setError(data.message);\n        } else {\n          // render our data\n          setData(data);\n          setError(null);\n        }\n      });\n  };\n\n  // handel invalid user\n\n  return (\n    <div>\n      <div className=\"navbar\">Github Search</div>\n      <div className=\"search\">\n        <Form onSubmit={handelSubmit}>\n          <Form.Group>\n            <Form.Input\n              placeholder=\"Github user\"\n              name=\"github user\"\n              onChange={handelSearch}\n            />\n            <Form.Button content=\"Search\" />\n          </Form.Group>\n        </Form>\n      </div>\n      {/* checking for error*/}\n      {error ? (\n        <h1>{error}</h1>\n      ) : (\n        <div className=\"card\">\n          <Card>\n            <Image src={avatar} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{name}</Card.Header>\n              <Card.Header>{userName}</Card.Header>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"user\" />\n                {followers} followers\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"user\" />\n                {repos} Repos\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"user\" />\n                {following} Following\n              </a>\n            </Card.Content>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/younissaleh/Desktop/githubb/src/index.js",[],{"ruleId":"19","severity":1,"message":"20","line":3,"column":8,"nodeType":"21","messageId":"22","endLine":3,"endColumn":12},{"ruleId":"23","severity":1,"message":"24","line":95,"column":15,"nodeType":"25","endLine":95,"endColumn":18},{"ruleId":"23","severity":1,"message":"24","line":101,"column":15,"nodeType":"25","endLine":101,"endColumn":18},{"ruleId":"23","severity":1,"message":"24","line":107,"column":15,"nodeType":"25","endLine":107,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]